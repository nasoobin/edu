1. 변수의 스코프에 대하여 설명하시오.
=> 변수 선언 된 영역(중괄호)안에서 활용할 수 있으며, 
    같은 영역안에서 중복해서 변수 선언은 불가하다.
    그리고, 영역을 벗어나면 해당 변수는 메모리에서 소멸됨.

2.지역변수란?
=> 함수 안에 선언 된 변수.

3.인스턴스 변수란?
=> 클래스 안에 선언 된 변수.

4. 아래의 함수를 펙토리얼로 표현하시오.
System.out.println("3 factorial: " + factorial(3));
System.out.println("3 factorial: " + factorial(12));

=> 	public static int factorial(int n) {
		
		if(n == 1) {
			return 1;
		}
		else {
			return n * factorial(n-1);
		}
	}

5.클래스의 구성요소는?
=> 클래스 안에는 변수와 함수만 만들 수 있다.
   ＊메모리에 값 을 할당하고(변수 선언) 그 값을 컨트롤 하는 영역(함수)

6.원의 넓이는 구하는 프로그램을 아래와 같이 작성하시오.
   - 원클래스를 만들것
   - 변수 radius
   - 변수 radius에 대한 setter getter 함수 만들것
   - getArea 함수
  
  -메인 메소드를 가진 다른 클래스(AreaTest)에서 원 객체를 생성할것
=> class Circle {
	double radius;
	
	public void setRadius(double r) {
		radius = r;
	}
	
	public double getRadius() {
		return radius;
	}
	
	public double getArea() {
		return radius * radius * Math.PI;
	}
	
}

public class AreaTest {

	public static void main(String[] args) {
		
		Circle cc = new Circle();
		
		cc.setRadius(10);
		
		System.out.println(cc.getRadius());
		System.out.println(cc.getArea());

	}

}


7. 객체에 대하여 설명하시오.
=> .class를 메모리에 올린것

8. 아래의 클래스에 대하여, 메모리 그림을 그리시오.
class Rectangle{
	int width;
	int height;
	
	public int getArea() {
		return width * height;
	}
	
	public int getWidth() {
		return width;
	}
	public void setWidth(int width) {
		this.width = width;
	}
	public int getHeight() {
		return height;
	}
	public void setHeight(int height) {
		this.height = height;
	}
	
}

9.클래스와 객체의 차이는?
- 클래스 : .class
- 객체: .class를 메모리에 올린것


10.아래의 프로그램을 작성하시오.
-1 부터 num 까지 합을 구하는 class 를 작성하도록 하시오.
 
public class SumMain {

    public static void main(String[] args) {

        GetSum getsum = new GetSum(); //1)객체 생성
         int num; //2)num 변수 선언
         num = 50;

         getsum.setNum(num); //3)getsum 객체의 setNum함수 호출, num값 50 저장
         getsum.sum(); //4)getsum객체의 sum함수 호출, 1-50까지 합 구함

      }

}
=> class GetSum {
	
	int num;
	
	public void setNum(int n) {
		num = n;
	}
	
	public void sum() {
		
		int sum = 0;
		
		for(int i = 1; i <= num; i++) {
			sum += i;
		}
		System.out.println(sum);
	}
	
	
}


11.아래의 프로그래밍을 작성하시오.
 
Gugudan gugudan = new Gugudan();
gugudan.printGugu(10); //1단부터 10단까지 출력
gugudan.printGugu(20); //1단부터 20단까지 출력