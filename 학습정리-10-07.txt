1.  swithc 문에서 아래의 프로그래밍을 짜시오.

1234 월 봄입니다.출력
5678 월 여름입니다.출력
9 10 11 12 월 겨울 입니다. 출력
=> 문제와는 다르지만 switch 문을 사용해서 내 맘에 드는 출력값을 위해 살짝 바꿔 봤음.
 	int month = 12;
	System.out.print(month +"월은 ");
		
	switch(month) {
	case 12: case 1: case 2:
		System.out.println("봄을 기다리는 겨울입니다.");
		break;
	case 3: case 4: case 5:
		System.out.println("싱그러운 봄입니다.");
		break;
	case 6: case 7: case 8:
		System.out.println("햇살이 뜨거운 여름입니다.");
		break;
	case 9: case 10: case 11:
		System.out.println("풍요로운 가을입니다.");
		break;
	default:
		System.out.println("잘못된 입력입니다.");
	}

2. int num = -10 을 할당 후 해당 정수에 대한 절댓값을 출력하는 프로그램을 작성하시오.
  절대값은 양수 입니다.
 => 	int num = -10;
		
	if(num<=0) {
		num = num * -1;
	}
	System.out.println(num);

3. while 문과 do while 문의 차이는 무엇인가요?
 ＊while => 조건이 참이 될 때까지 반복해서 조건을 확인함. 실행 여부와 상관없음.
 ＊do ~ while => 실행을 먼저하고 조건을 확인함. 조건과 상관없이 무조건 한번은 실행됨. 

4. 아래에서 for 문이 실행 되는 순서를 정리하시오.

for (i = 1; i <= 1000; i++){
    sum = sum +i
}
=> 1. 초기화 시킨다. (i = 1)
     2. 조건을 검사한다. (i <= 1000)
     3. 조건에 맞으면 실행한다. (sum = sum + i)
     4. 실행 이후에 증감시킨다. (i++)
     5. 조건이 만족할 때까지 2 ~ 4를 반복한다.

5. 구구단 6단을 출력 하는 프로그램을 짜시오.
=> 	int dan = 6;
		
	for(int i = 1; i <= 9; i++) {
		System.out.println(dan +"*"+ i +"="+ (dan*i));
	}

6. 1부터 10000 까지의 합을 구하는 프로그램을 짜시오.
 =>	 int sum = 0;
		
	for(int i = 1; i <= 1000; i++) {
		sum += i;
	}
	System.out.println(sum);

7. 1부터 10000 까지의 숫자중 홀수 의 합을 구하는 프로그램을 짜시오.
 => 	int sum = 0;
		
	for(int i = 1; i <= 1000; i++) {
		if(i % 2 != 0) {
			sum += i;
		}
	}
	System.out.println(sum);

8. break 와 continue에 대하여 설명하시오.
 ＊break => 지정한 조건을 만나면 반복문 영역에서 빠져나온다.
 ＊continue => 지정한 조건을 만나면 반복문 조건으로 돌아가서 조건을 확인한다.

9. 1과 100 사이의 숫자중 5의 배수이자 7의 배수의 첫번재 수는(프로그래밍 하시오)
 => 	for(int i = 1; i <= 100; i++) {
		if((i % 5) == 0 && (i % 7) == 0) {
			System.out.println(i);
			break;
		}
	}

10. 1과 10000 사이의 숫자중 5의 배수이자 7의 배수인 수의 갯수는(프로그래밍 하시오)
 => 	int count = 0;
		
	for(int i = 1; i <= 1000; i++) {
		if((i % 5) == 0 && (i % 7) == 0) {
			count++;
		}
	}
	System.out.println(count);





